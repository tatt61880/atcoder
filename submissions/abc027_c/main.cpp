#include <stdio.h>
int main(void)
{
	long long N;
	scanf("%lld", &N);
#if 0
最善手がどういう手になるか考える。
                1
t         2           3
a      4     5     6     7
t     8 9  10 11 12 13 14 15
高橋君(上図t)と青木君(上図a)がそれぞれどういう手を打っても、
高橋君が選ぶ可能性のある数は 2～3,  8～15, 32～ 63, ...のみである。
青木君が選ぶ可能性のある数は 4～7, 16～31, 64～127, ...のみである。
それぞれがどんな戦略でこのゲームに挑もうとも、高橋君が20を選ぶ可能性はないし、青木君が12を選ぶ可能性はない。
ここで、N+1(Nより大きな数の中で最小の数)を高橋君が選ぶ可能性がある場合を考える。
例えば、N = 40という場合のゲームがどうなるか。
高橋君は、初手で2を選ぶべき(小さい方を選ぶべき)。3を選ぶと、自分の手番(3手目)で41を超える可能性が出てくるから。
2手目の青木君は4ではなく5を選ぶべき(大きい方を選ぶべき)。
3手目の高橋君は10を選ぶ。
4手目の青木君は21を選ぶ。
5手目の高橋君は小さい方を選んでも42で負けである。
このように、N=40の場合は高橋君は小さい方を、青木君は大きい方を選ぶ。
これを戦略Aと言うことにする。
【戦略A: 高橋君は小さい方を選び続ける。青木君は大きい方を選び続ける。】
(この戦略は、「N+1を高橋君が選ぶ可能性がある」という場合において、
N=40でなくても、Nが大きい場合でも同様に双方にとっての最善の戦略である。)
N+1を青木君が選ぶ可能性がある場合は同様に考えると、青木君は小さい数を、高橋君は大きい数を選ぶのがそれぞれ最善。
これを戦略Bと言うとする。
【戦略B: 高橋君は大きい方を選び続ける。青木君は小さい方を選び続ける。】
N+1をどちらが選ぶ数に含まれるかで、戦略が変わる。
N+1を2で割り続ける(※int型で割り続ける)。偶数回割った時に、0になるなら、戦略A。奇数回なら戦略B。
(対数を使ってもいいけれど、今回は使わないことにする)
戦略が決まったら、その戦略に基づいてシミュレートすればOK.
#endif
	int count = 0;
	long long n = N;
	while(n){
		n /= 2;
		count++;
	}
	if(count % 2 == 0){
		long long num = 1;
		//戦略A
		for(int i = 0;; i++){
			if(i % 2 == 0){ //高橋君の手番
				num = 2 * num;
			}else{
				num = 2 * num + 1;
			}
			if(num > N){
				if(i % 2 == 0){
					puts("Aoki");
					return 0;
				}else{
					puts("Takahashi");
					return 0;
				}
			}
		}
	}else{
		long long num = 1;
		//戦略B
		for(int i = 0;; i++){
			if(i % 2 == 0){ //高橋君の手番
				num = 2 * num + 1;
			}else{
				num = 2 * num;
			}
			if(num > N){
				if(i % 2 == 0){
					puts("Aoki");
					return 0;
				}else{
					puts("Takahashi");
					return 0;
				}
			}
		}
	}
	return 0;
}
